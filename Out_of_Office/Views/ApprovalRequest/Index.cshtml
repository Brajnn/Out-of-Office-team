@model X.PagedList.IPagedList<Out_of_Office.Application.Approval_Request.ApprovalRequestDto>
@using X.PagedList.Mvc.Core
@using X.PagedList.Mvc.Core.Fluent
@{
    ViewData["Title"] = "Approval Requests";
    var currentSort = ViewBag.CurrentSort as string;
    var idSortParam = currentSort == "id_asc" ? "id_desc" : "id_asc";
    var approverSortParam = currentSort == "approver_asc" ? "approver_desc" : "approver_asc";
    var statusSortParam = currentSort == "status_asc" ? "status_desc" : "status_asc";
}

<h2>Approval Requests</h2>



    @using (Html.BeginForm("Index", "ApprovalRequest", FormMethod.Get))
{
    <p>
        <label for="searchRequestId">Search by Request Number:</label>
        <input type="number" id="searchRequestId" name="searchRequestId" value="@ViewData["SearchRequestId"]" />
    </p>
    <p>
        <label for="statusFilter">Filter by Status:</label>
        @Html.DropDownList("statusFilter", (SelectList)ViewBag.Statuses, "All Statuses", new { @id = "statusFilter" })

        <input type="submit" value="Filter" class="btn btn-primary ml-2" />
    </p>
    }


<table class="table">
    <thead>
        <tr>
            <th>
                <a href="?sortOrder=@idSortParam">ID</a>
            </th>

             <th>
                <a href="?sortOrder=@approverSortParam">Approver</a>
            </th> 
            <th>Employee</th>
            <th>
                Leave Request Number
            </th>
            <th>
                <a href="?sortOrder=@statusSortParam">Status</a>
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var approvalRequest in Model)
        {
            <tr>
                <td>@approvalRequest.ID</td>
                <td>@approvalRequest.EmployeeFullName</td>
                <td>@approvalRequest.ApproverFullName</td> 
                <td>@approvalRequest.LeaveRequestID</td>
                <td>
                    @{
                        var badgeClass = approvalRequest.Status switch
                        {
                            "Approved" => "badge bg-success",
                            "Rejected" => "badge bg-danger",
                            "ApprovalStatus.New" => "badge bg-primary",
                            _ => "badge bg-light"
                        };
                    }
                    <span class="@badgeClass">@approvalRequest.Status</span>
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@approvalRequest.ID" class="btn btn-info">Details</a>

                    @if (approvalRequest.Status == "New")
                    {
                        <form asp-controller="ApprovalRequest" asp-action="Approve" method="post" class="d-inline">
                            <input type="hidden" name="id" value="@approvalRequest.ID" />
                            <input type="hidden" name="status" value="Approved" />
                            <button type="submit" class="btn btn-success">Approve</button>
                        </form>
                        <form asp-controller="ApprovalRequest" asp-action="Reject" method="post" class="d-inline">
                            <input type="hidden" name="id" value="@approvalRequest.ID" />
                            <input type="hidden" name="status" value="Rejected" />
                            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#rejectModal" data-id="@approvalRequest.ID">
                                Reject
                            </button>
                        </form>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="text-center">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { pageNumber = page, sortOrder = ViewBag.CurrentSort, searchRequestId = ViewData["SearchRequestId"], statusFilter = ViewBag.StatusFilter }), new PagedListRenderOptions
{
    Display = PagedListDisplayMode.IfNeeded,
    MaximumPageNumbersToDisplay = 5,
    DisplayLinkToFirstPage = PagedListDisplayMode.Always,
    DisplayLinkToLastPage = PagedListDisplayMode.Always,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always,
    DisplayLinkToIndividualPages = true,
    EllipsesFormat = "…",
    LinkToFirstPageFormat = "First",
    LinkToPreviousPageFormat = "Previous",
    LinkToNextPageFormat = "Next",
    LinkToLastPageFormat = "Last",
    ContainerDivClasses = new[] { "pagination-container" },
    UlElementClasses = new[] { "pagination", "justify-content-center" },
    LiElementClasses = new[] { "page-item" },
    PageClasses = new[] { "page-link" }
})
</div>
@* Decision Comment field *@
<div class="modal fade" id="rejectModal" tabindex="-1" aria-labelledby="rejectModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="rejectForm" method="post" asp-controller="ApprovalRequest" asp-action="Reject">
                <div class="modal-header">
                    <h5 class="modal-title" id="rejectModalLabel">Reject Request</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="approvalRequestId" name="id" />
                    <div class="mb-3">
                        <label for="comment" class="form-label">Rejection Reason</label>
                        <textarea class="form-control" name="comment" id="comment" rows="3" required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Reject</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script src="~/js/site.js" asp-append-version="true"></script>