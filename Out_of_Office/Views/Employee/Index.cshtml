@model X.PagedList.IPagedList<Out_of_Office.Application.Employee.EmployeeDto>
@using X.PagedList.Mvc.Core
@using X.PagedList.Mvc.Core.Fluent
<h2>Employees</h2>

<p>
    @using (Html.BeginForm("Index", "Employee", FormMethod.Get))
    {
    <p>
        <label for="searchString">Search by Name:</label>
        <input type="text" name="searchString" id="searchString" value="@ViewBag.CurrentFilter" />
    </p>
    <p>
        <label for="positionFilter">Filter by Position:</label>
            @Html.DropDownList("positionFilter", (SelectList)ViewBag.Positions, "All Positions", new { @id = "positionFilter" })
    
        <input type="submit" value="Search" class="btn btn-primary ml-2" />
    </p>

    }
</p>
@if (User.IsInRole("Administrator"))
{
<p>
    @Html.ActionLink("Add New Employee", "Create", "Employee", null, new { @class = "btn btn-primary" })
</p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Full Name", "Index", new { sortOrder = ViewBag.NameSortParm, searchString = ViewBag.CurrentFilter })
            </th>

            <th>
                @Html.ActionLink("Position", "Index", new { sortOrder = ViewBag.PositionSortParm, searchString = ViewBag.CurrentFilter })
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var employee in Model)
        {
            <tr>
                <td>@employee.FullName</td>
                <td>@employee.Position</td>
                

                <td>
                    @if (User.IsInRole("HRManager") || User.IsInRole("Administrator"))
                    {
                        <form asp-action="UpdateStatus" method="post" style="display:inline;">
                            <input type="hidden" name="id" value="@employee.Id" />
                            <input type="hidden" name="isActive" value="@(employee.Status == "Active" ? "false" : "true")" />
                            <button type="submit" class="btn @(employee.Status == "Active" ? "btn-danger" : "btn-success")">
                                @(employee.Status == "Active" ? "Deactivate" : "Activate")
                            </button>
                        </form>
                    }
                    <a class="btn btn-info" asp-action="Details" asp-route-id="@employee.Id">Details</a>
                    @if (User.IsInRole("HRManager") || User.IsInRole("Administrator"))
                    {
                        <a class="btn btn-warning" asp-action="Edit" asp-route-id="@employee.Id">Edit</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="text-center">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { pageNumber = page, sortOrder = ViewBag.CurrentSort, searchString = ViewBag.CurrentFilter, positionFilter = ViewBag.CurrentPositionFilter }), new PagedListRenderOptions
{
    Display = PagedListDisplayMode.IfNeeded,
    MaximumPageNumbersToDisplay = 5,
    DisplayLinkToFirstPage = PagedListDisplayMode.Always,
    DisplayLinkToLastPage = PagedListDisplayMode.Always,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always,
    DisplayLinkToIndividualPages = true,
    EllipsesFormat = "…",
    LinkToFirstPageFormat = "First",
    LinkToPreviousPageFormat = "Previous",
    LinkToNextPageFormat = "Next",
    LinkToLastPageFormat = "Last",
    ContainerDivClasses = new[] { "pagination-container" },
    UlElementClasses = new[] { "pagination", "justify-content-center" },
    LiElementClasses = new[] { "page-item" },
    PageClasses = new[] { "page-link" }
})
</div>